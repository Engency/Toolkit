#!/bin/bash

currentDir=`dirname $0`
cd ${currentDir}/..
buildID=${PWD##*/}

generate_environment_configuration()
{
    # generate new environment configuration if dir has no environment config yet
    [[ -e .env ]] || cp .env.example .env
}

copy_environment_configuration()
{
    # copy existing environment configuration from parent directory if dir has no environment config yet
    [[ -e .env ]] || cp ../.env .env
}

prepare_environment()
{
    # update docker compose file
    export WORKSPACE=`pwd`; set -a; . .env; rm -rf docker-compose.yml; envsubst < "docker-template.yml" > "docker-compose.yml";

    # fix permissions
    chmod -R 777 bootstrap/cache

    # set version tag
    echo -n "{\"name\":\"${buildID}\"}" > version.json

    # install dependencies
    echo 'Installing dependencies...'
    docker-compose run --no-deps --rm webserver composer install
    docker-compose run --no-deps --rm webserver npm install --no-optional --silent

    # build assets
    echo 'Building assets...'
    docker-compose run --no-deps --rm webserver npm run --silent production

    # generate laravel key
    docker-compose run --no-deps --rm webserver php artisan key:generate

    # check if dependency-directories exist
    if [[ -d ./vendor ]] && [[ -d ./node_modules ]]; then return 0; else return 1; fi
}

backup_live_environment()
{
    echo 'Backing-up live environment...'
    vzc php artisan backup:run --quiet

    return 0
}

create_backup_link_for_live_environment()
{
    echo 'Creating backup link for live environment...'
    # link to current live environment
    backupBuildID=$(cat ~/builds/liveBuildId)
    rm ~/builds/backup
    ln -s ~/builds/${backupBuildID} ~/builds/backup
    echo ${backupBuildID} > ~/builds/backupBuildId

    return 0
}

stop_live_environment()
{
    echo 'Stopping service...'
    sudo systemctl stop vzctalent

    # stop all images
    docker stop $(docker ps -a -q)

    return 0
}

migrate_new_environment()
{
    # migrate data
    echo 'Migrating data...'
    docker-compose up mariadb &
    docker-compose up redis &
    sleep 5

    result=$(docker-compose run --rm webserver php artisan migrate --force --no-interaction)
    echo ${result}

    if [[ ${result} == *"Migrated:"* ]]; then
        echo -n '1' > ./ranMigrations
        return 0
    else
        if [[ ${result} == *"Nothing to migrate"* ]]; then
            echo -n '0' > ./ranMigrations
            return 0
        else return 1; fi
    fi
}

install_new_environment()
{
    echo 'Installing new environment...'
    # link to new environment
    rm ~/builds/live
    ln -s ~/builds/${buildID} ~/builds/live
    echo ${buildID} > ~/builds/liveBuildId

    return 0
}

start_live_environment()
{
    # first shutdown all running containers
    docker-compose down

    echo 'Starting service using new environment...'
    sudo systemctl start vzctalent

    attempts=10
    services=( webserver mariadb cachecontroller redis )
    for service in "${services[@]}"
    do
        while ! [[ $(docker ps --filter "name=${buildID}_${service}" | grep Up) ]]; do
            if [[ "$attempts" -eq "0" ]]; then
                echo "Service ${service} did NOT successfully start..."
                return 1 # error
            fi
            ((attempts--))
            sleep 1
        done
    done

    echo 'Service has started and is ready to be used!'
    return 0
}

update_cache_and_indices()
{
    echo 'Updating cache...'
    docker-compose run --rm webserver php artisan cache:rebuild --quiet

    echo 'Updating indices...'
    docker-compose run --rm webserver php artisan scout:import-all-organisations --quiet

    return 0
}

rollback_database()
{
    echo 'Performing database rollback...'

    ranMigrations=$(cat ~/builds/live/ranMigrations)

    if [[ ranMigrations -eq '1' ]]; then
        docker-compose run --rm webserver php artisan migrate:rollback
    fi
}

rollback()
{
    echo 'Performing rollback...'

    # force stop service
    stop_live_environment

    # unlink probable broken live environment
    rm ~/builds/live
    rm ~/builds/liveBuildId
    cp -P ~/builds/backup ~/builds/live
    cp ~/builds/backupBuildId ~/builds/liveBuildId

    # start service
    sudo systemctl start vzctalent
}




case "$1" in
install)
    echo 'Starting installation.'
    df
    sudo /root/allowed-root-scripts.sh upgrade-host
    generate_environment_configuration
    prepare_environment

    if ! migrate_new_environment || ! install_new_environment || ! start_live_environment; then
        echo 'An exception occurred after migrating the database...'
        exit 1
    fi

    sudo /root/allowed-root-scripts.sh cleanup
    echo 'Completed installing. Service has started.'
    ;;
upgrade)
    echo 'Starting upgrade of service.'
    df
    copy_environment_configuration
    prepare_environment
    backup_live_environment
    create_backup_link_for_live_environment
    stop_live_environment

    # rollback is required in case of a failure starting here

    if ! migrate_new_environment; then
        echo 'An exception occurred during migration of the database... Starting rollback procedure'
        rollback
        echo 'Rollback completed. Please make sure service is in a healthy condition.'
        exit 1
    fi

    if ! install_new_environment || ! start_live_environment; then
        echo 'An exception occurred after migrating the database... Starting rollback procedure'
        rollback_database
        rollback
        echo 'Rollback completed. Please make sure service is in a healthy condition.'
        exit 1
    fi

    # service was installed with success. Rollback won't be required anymore

    update_cache_and_indices
    sudo /root/allowed-root-scripts.sh upgrade-host
    sudo /root/allowed-root-scripts.sh cleanup
    echo 'Completed upgrading service.'
    ;;
rollback)
    echo 'Starting rollback procedure...'
    rollback_database
    rollback
    echo 'Rollback completed'
    ;;
*)
    echo "Usage: $0 {install|upgrade|rollback}"
esac

exit 0
